@startuml
class org.example.util.ExpressionEvaluator {
+ {static} double evaluateExpression(String)
- {static} boolean isOperator(char)
- {static} boolean hasPrecedence(char,char)
- {static} double performOperation(char,double,double)
}
class org.example.Calculator {
- ShowPanel showPanel
- ButtonPanel buttonPanel
- HistoryControlPanel historyControlPanel
- HistoryPanel historyPanel
+ <<Create>> Calculator()
}
class org.example.pojo.History {
- String expression
- String result
- String historyId
+ <<Create>> History(String,String)
+ <<Create>> History(String,String,String)
+ String getExpression()
+ String getResult()
+ void generateHistoryId()
+ String getHistoryId()
+ void setExpression(String)
+ void setResult(String)
}
class org.example.panel.ShowPanel {
- TextField inputTextField
- Label result
- String historyID
+ {static} double showPanelHeight
+ <<Create>> ShowPanel()
+ void calculate()
+ void clear()
+ void input(String)
+ void delete()
+ void loadHistory(History)
}
class org.example.event.HistoryLoadEvent {
+ {static} EventType<HistoryLoadEvent> HISTORY_LOAD_EVENT_TYPE
- History history
+ <<Create>> HistoryLoadEvent(History)
+ History getHistory()
}
class org.example.controller.HistoryShow {
- {static} double historyControlPanelHeight
- History history
+ <<Create>> HistoryShow(History)
+ History getHistory()
}
class org.example.panel.HistoryControlPanel {
- {static} double historyControlPanelHeight
- HistoryButton historyButton
+ <<Create>> HistoryControlPanel()
}
class org.example.AppLauncher {
+ {static} void main(String[])
}
class org.example.Main {
+ void start(Stage)
+ {static} void main(String[])
}
class org.example.util.HistoryRecorder {
- {static} String filePath
+ {static} void writeDownHistory(String,String,String)
+ {static} ArrayList<History> readHistory()
}
class org.example.staticValue.CalculatorSize {
+ {static} double width
+ {static} double height
}
class org.example.event.HistoryClickEvent {
+ {static} EventType<HistoryClickEvent> HISTORY_CLICK_EVENT_TYPE
+ <<Create>> HistoryClickEvent()
}
class org.example.panel.ButtonPanel {
- {static} double buttonPanelHeight
- {static} int rowNumber
- {static} int columnNumber
- {static} OperatorButton[] operatorButtons
+ <<Create>> ButtonPanel()
}
class org.example.panel.HistoryPanel {
- {static} double historyPanelHeight
- {static} double labelPanelHeight
- boolean isShow
- ScrollPane scrollPanel
- AnchorPane labelPanel
- TilePane historyPanel
- Label label
- ArrayList<HistoryShow> historyShows
- ArrayList<History> histories
+ <<Create>> HistoryPanel()
- void showHistoryPanel()
- void hideHistoryPanel()
+ void toggleHistoryPanel()
- void addHistory(HistoryShow)
}
class org.example.event.OperatorButtonClickEvent {
+ {static} EventType<OperatorButtonClickEvent> OPERATOR_BUTTON_CLICK_EVENT_TYPE
+ <<Create>> OperatorButtonClickEvent()
}
class org.example.controller.ErrorAlert {
+ <<Create>> ErrorAlert(Exception)
}
class org.example.controller.HistoryButton {
- String buttonName
+ <<Create>> HistoryButton()
}
class org.example.controller.OperatorButton {
- String operator
- int rowNum
- int columnNum
+ <<Create>> OperatorButton(String,int,int)
+ String inputOperator()
+ int[] getButtonPosition()
}


javafx.scene.layout.AnchorPane <|-- org.example.Calculator
javafx.scene.layout.GridPane <|-- org.example.panel.ShowPanel
javafx.event.Event <|-- org.example.event.HistoryLoadEvent
org.example.controller.GridPane <|-- org.example.controller.HistoryShow
javafx.scene.layout.AnchorPane <|-- org.example.panel.HistoryControlPanel
javafx.application.Application <|-- org.example.Main
javafx.event.Event <|-- org.example.event.HistoryClickEvent
javafx.scene.layout.GridPane <|-- org.example.panel.ButtonPanel
javafx.scene.layout.AnchorPane <|-- org.example.panel.HistoryPanel
javafx.event.Event <|-- org.example.event.OperatorButtonClickEvent
javafx.scene.control.Alert <|-- org.example.controller.ErrorAlert
javafx.scene.control.Button <|-- org.example.controller.HistoryButton
javafx.scene.control.Button <|-- org.example.controller.OperatorButton
@enduml